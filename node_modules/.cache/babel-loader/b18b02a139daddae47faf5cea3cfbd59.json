{"ast":null,"code":"import _classCallCheck from \"/Users/johnhuynh/Desktop/routing--assignment-problem/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/johnhuynh/Desktop/routing--assignment-problem/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/johnhuynh/Desktop/routing--assignment-problem/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/johnhuynh/Desktop/routing--assignment-problem/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/johnhuynh/Desktop/routing--assignment-problem/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/johnhuynh/Desktop/routing--assignment-problem/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Courses from './containers/Courses/Courses';\nimport Users from './containers/Users/Users';\nimport { Route, BrowserRouter, Link } from 'react-router-dom';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/users\",\n        component: Users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/courses\",\n        component: Courses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Users\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/courses\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Courses\")))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\n{\n  /* <ol style={{textAlign: 'left'}}>\n  <li>Add Routes to load \"Users\" and \"Courses\" on different pages (by entering a URL, without Links)</li>\n  <li>Add a simple navigation with two links => One leading to \"Users\", one leading to \"Courses\"</li>\n  <li>Make the courses in \"Courses\" clickable by adding a link and load the \"Course\" component in the place of \"Courses\" (without passing any data for now)</li>\n  <li>Pass the course ID to the \"Course\" page and output it there</li>\n  <li>Pass the course title to the \"Course\" page - pass it as a param or score bonus points by passing it as query params (you need to manually parse them though!)</li>\n  <li>Load the \"Course\" component as a nested component of \"Courses\"</li>\n  <li>Add a 404 error page and render it for any unknown routes</li>\n  <li>Redirect requests to /all-courses to /courses (=> Your \"Courses\" page)</li>\n  </ol> */\n}","map":{"version":3,"sources":["/Users/johnhuynh/Desktop/routing--assignment-problem/src/App.js"],"names":["React","Component","Courses","Users","Route","BrowserRouter","Link","App"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,IAA/B,QAA2C,kBAA3C;;IAEMC,G;;;;;;;;;;;;;6BACM;AACR,aACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAEJ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,SAAS,EAAED,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAJF,CAFA,CADF,CALF,CADF,CADF;AA0BD;;;;EA5BeD,S;;AA+BlB,eAAeM,GAAf;AAGA;AAAC;;;;;;;;;;AASQ","sourcesContent":["import React, { Component } from 'react';\nimport './App.css'\nimport Courses from './containers/Courses/Courses';\nimport Users from './containers/Users/Users';\nimport { Route, BrowserRouter, Link } from 'react-router-dom';\n\nclass App extends Component {\n  render () {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          {/* <li>Add Routes to load \"Users\" and \"Courses\" on different pages (by entering a URL, without Links)</li> */}\n          <Route path='/users' component={Users} /> \n          <Route path='/courses' component={Courses} />\n          {/* <li>Add a simple navigation with two links => One leading to \"Users\", one leading to \"Courses\"</li> */}\n          <header>\n            <nav>\n            \n            <ul>\n              <li>\n                <Link to='/users'>Users</Link>\n              </li>\n              <li>\n                <Link to='/courses'>Courses</Link>\n              </li>\n            </ul>\n            \n            </nav>\n          </header>\n          \n\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n\n{/* <ol style={{textAlign: 'left'}}>\n<li>Add Routes to load \"Users\" and \"Courses\" on different pages (by entering a URL, without Links)</li>\n<li>Add a simple navigation with two links => One leading to \"Users\", one leading to \"Courses\"</li>\n<li>Make the courses in \"Courses\" clickable by adding a link and load the \"Course\" component in the place of \"Courses\" (without passing any data for now)</li>\n<li>Pass the course ID to the \"Course\" page and output it there</li>\n<li>Pass the course title to the \"Course\" page - pass it as a param or score bonus points by passing it as query params (you need to manually parse them though!)</li>\n<li>Load the \"Course\" component as a nested component of \"Courses\"</li>\n<li>Add a 404 error page and render it for any unknown routes</li>\n<li>Redirect requests to /all-courses to /courses (=> Your \"Courses\" page)</li>\n</ol> */}\n"]},"metadata":{},"sourceType":"module"}